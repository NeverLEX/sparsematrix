#!/bin/bash

function usage {
    cat <<EOF
Usage: $0 [OPTION]... [VAR=VALUE]...

Configuration:
  --help                  display this help and exit
  --prefix                specify the install path
  --blas-root             specify the compiled blas bin/lib/include path
  --ar                    AR
  --as                    AS
  --runlib                RUNLIB
  --cxx                   CXX
  --cxxflags              CXXFLAGS
  --target                TARGET

EOF
}

ar=ar
as=
runlib=
cxx=g++
cxxflags=" -std=c++11 -fPIC -O2 -fvisibility=hidden"
prefix=/usr/local
blas_root=
target=
while [ $# -gt 0 ];
do
  case "$1" in
  --help)
    usage; exit 0 ;;
  --ar=*)
    ar=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --as=*)
    as=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --runlib=*)
    runlib=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --cxx=*)
    cxx=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --cxxflags=*)
    cxxflags=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --prefix=*)
    prefix=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --blas-root=*)
    blas_root=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  --target=*)
    target=`expr "X$1" : '[^=]*=\(.*\)'`;
    shift;;
  *)  echo "Unknown argument: $1, exiting"; usage; exit 1 ;;
  esac
done

prefix=${prefix/#~/$HOME}
blas_root=${blas_root/#~/$HOME}
mkdir -p $prefix
if ! which realpath >&/dev/null; then
    prefix=`readlink -f $prefix`
    if [ ! -z $blas_root ]; then
        blas_root=`readlink -f $blas_root`
    fi
else
    prefix=`realpath $prefix`
    if [ ! -z $blas_root ]; then
        blas_root=`realpath $blas_root`
    fi
fi

extra_cxxflags=
if [ "$target" == "HASWELL" ]; then
  extra_cxxflags="-DHAVE_FMA -DHAVE_AVX2 -mavx -mavx2 -mfma"
elif [ "$target" == "SANDYBRIDGE" ]; then
  extra_cxxflags="-DHAVE_AVX -mavx"
elif [ "$target" == "ARM64" ]; then
  extra_cxxflags="-DARM64"
elif [ "$target" == "ARMV7" ]; then
  extra_cxxflags="-DARMV7"
elif [ ! -z $target ]; then
  echo "Unknown TARGET."
  exit 1
fi

echo PREFIX:$prefix
echo BLAS_ROOT:$blas_root

cat > Makefile.inc <<EOF
PREFIX=$prefix
BLAS_ROOT=$blas_root
AR=$ar
AS=$as
RANLIB=$runlib
CXX=$cxx
CXXFLAGS=$cxxflags
CXXFLAGS+=$extra_cxxflags
EOF
